package{	import flash.net.registerClassAlias;	import VideoPackage;	import flash.display.Sprite;	import flash.media.Video;	import flash.media.Camera;	//import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.utils.ByteArray;	import flash.net.LocalConnection;	import flash.utils.Timer;    import flash.events.ActivityEvent;	import flash.events.StatusEvent;	import flash.events.TimerEvent;	//import flash.geom.Rectangle;	import com.adobe.images.JPGEncoder;		public class Camera1 extends Sprite	{		private const NAMED_CHANNEL:String = "_kidtv";		private const QUALITY:int = 70;		private var video:Video;				private var timer:Timer = new Timer(32);		private var sender:LocalConnection = new LocalConnection();		private var cntr:int;		public var objVideoPackage:VideoPackage = new VideoPackage();		private var bitmap:BitmapData;		//private var image:Bitmap;		private var byteArray:ByteArray;		//private var rect:Rectangle;		private var jpgEncoder:JPGEncoder = new JPGEncoder(QUALITY);				public function Camera1():void		{			registerClassAlias("VideoPackage", VideoPackage);			registerClassAlias("ByteArray", ByteArray);			sender.addEventListener(StatusEvent.STATUS, statusHandler);			//bitmap = new BitmapData(100, 100, true, 0x66fff000);			//image = new Bitmap(bitmap);			//addChild(image);			//rect = new Rectangle(image.x, image.y, image.height, image.height);			//byteArray = jpgEncoder.encode(bitmap);			var camera:Camera = Camera.getCamera();			timer.addEventListener(TimerEvent.TIMER, onTimer);			if (camera != null) 			{				//trace("got camera: ", camera);				camera.addEventListener(ActivityEvent.ACTIVITY, activityHandler);				video = new Video(640, 480);				video.attachCamera(camera);				//video.x = 200;				//video.y = 50;				addChild(video);								timer.start();			} 			else 			{				trace("You need a camera.");			}						// local connection test			//objVideoPackage.PackBytes(byteArray);			//sender.send(NAMED_CHANNEL, "TestConnection", "hello from camera 1", objVideoPackage);			// end local connection test		}				private function onTimer(evt:TimerEvent):void		{			bitmap = new BitmapData(video.width / 2, video.height / 2, false, 0xffffff); 			bitmap.draw(video);			byteArray = jpgEncoder.encode(bitmap);			objVideoPackage.PackBytes(byteArray);			sender.send(NAMED_CHANNEL, "TestConnection", "frame package " + cntr, objVideoPackage);			//sender.send(NAMED_CHANNEL, "TestConnection", byteArray);			cntr++;					}			private function activityHandler(event:ActivityEvent):void 		{			//trace("activityHandler: " + event);		}		private function statusHandler(event:StatusEvent):void		{			//trace("status event: ", event);		}	}}