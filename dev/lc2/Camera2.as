package{	import flash.net.registerClassAlias;	//import VideoPackage;	import flash.display.Sprite;	import flash.net.LocalConnection;	//import flash.net.SharedObject;	import flash.text.TextField;	import flash.display.Bitmap;	import flash.display.BitmapData;	//import flash.utils.Timer;	//import flash.events.TimerEvent;	import flash.utils.ByteArray;	//import flash.display.Loader;	//import com.adobe.images.JPGEncoder;	//import flash.events.Event;	//import com.adobe.images.JPGEncoder;		public class Camera2 extends Sprite	{		private const NAMED_CHANNEL:String = "_kidtv";		//private const QUALITY:int = 70;		private var receiver:LocalConnection = new LocalConnection();		//private var loader:Loader = new Loader();		//private var jpgEncoder:JPGEncoder = new JPGEncoder();		//var so:SharedObject;		var bitmap:BitmapData;		var image:Bitmap;;		//var timer:Timer = new Timer(32);		//private var jpgEncoder:JPGEncoder = new JPGEncoder(QUALITY);				public function Camera2():void		{			//registerClassAlias("VideoPackage", VideoPackage);			//registerClassAlias("BitmapData", BitmapData);			registerClassAlias("ByteArray", ByteArray);			//so.data.videoPackage = new VideoPackage();			//trace(so.data.isAlive);			//trace(so.data.videoPackage.test_str);//			timer.addEventListener(TimerEvent.TIMER, onTimer);//			timer.start();			//registerClassAlias("flash.display.Bitmap", flash.display.Bitmap);			//registerClassAlias("BitmapData", BitmapData);			//registerClassAlias("flash.geom.Transform", flash.geom.Transform);			// trace("camera 2");			receiver.connect(NAMED_CHANNEL);			receiver.client = this;					}//		public function onTimer(evt:TimerEvent):void//		{//			//so = SharedObject.getLocal("kidtv", "/", false);//			//trace("Camera2: " + so.data.isAlive);//			//trace("Camera2 videoPackage: " + so.data.videoPackage.cntr);//			//image = new Bitmap(so.data.videoPackage.bitmap);//			//trace(so.data.width);//			//bitmap = toBitmapData(so.data.width, so.data.height, so.data.byteArray);//			//			//image.x = 670;//			//addChild(image);//			//so.clear();////			if(image != null)////			{////				removeChild(image);////			}//			image = new Bitmap(bitmap);//			if(image != null)//			{//				addChild(image);//			}//			so = null;//			//var so:SharedObject = SharedObject.getLocal("kidtv", "/", false);//			//trace(so.data.videoPackage.bitmap);//			image = new Bitmap(bitmap);//			//image.x = 670;////			//sender.send(NAMED_CHANNEL, "TestConnection", "frame package " + cntr, objVideoPackage);//			//sender.send(NAMED_CHANNEL, "TestConnection", byteArray);//			//cntr++;//			//		}		public static function toBitmapData( width : Number, height : Number, ba : ByteArray ) : BitmapData		{			var bd : BitmapData = new BitmapData( width, height );						ba.position = 0;						for( var i:uint=0; i<bd.width ; i++ )			{			  for( var j:uint=0; j<bd.height; j++ )			  {				bd.setPixel( i, j, ba.readUnsignedInt() );			  }			}    						return bd;		}				//		public function TestConnection(_str:String, _videoPackage:VideoPackage):void		public function TestConnection(_colX:int, _colY:int, _byteArray:ByteArray):void		{			trace(_colX, _colY);			const X_INC:int = 80;			const Y_INC:int = 60;			const MAX_X:int = 640;			const MAX_Y:int = 480;						var bd_width:int = X_INC;			var bd_height:int = Y_INC;			var x_pos:int = X_INC * _colX;			var y_pos:int = Y_INC * _colY;			//test_txt.text = _str;			//var objVideoPackage:VideoPackage = _videoPackage;			//test_txt.text = objVideoPackage.test_str;			//trace(objVideoPackage.byteArray);						//var byteArray:ByteArray = objVideoPackage.byteArray;			//var byteArray:ByteArray = _byteArray;			bitmap = toBitmapData(bd_width, bd_height, _byteArray);			if(image != null)			{				//removeChild(image);			}//			image = new Bitmap(bitmap);			var image_local:Bitmap = new Bitmap(bitmap);						addChild(image_local);			image_local.x = x_pos;			image_local.y = y_pos;//			image.x = 250;//			image.y = 250;			trace("image coords: x=" + image_local.x + ", y=" + image_local.y);						//var byteArray:ByteArray = jpgEncoder.encode(_byteArray);						//test_txt.text = _str;			//loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onBytesLoaded);			//loader.loadBytes(byteArray);		}//		private function onBytesLoaded(evt:Event):void//		{//			if(image != null)//			{//				removeChild(image);//			}//			image = Bitmap(evt.target.content);//			addChild(image);//			trace_txt.text = numChildren.toString();//		}	}}